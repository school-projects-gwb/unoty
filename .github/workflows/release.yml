name: Release

on:
  push:
    branches: [ main ]

jobs:
  build-unix:
    name: "Build (GNU/Linux)"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev libbox2d-dev nlohmann-json3-dev
      - name: "Install build tools"
        run: |
          sudo apt-get install -y cmake cmake-data build-essential ninja-build
      - name: "Setup CMake"
        run: |
          mkdir build
          cd build
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            ..
      - name: "Build"
        run: |
          cd build
          cmake --build . --target engine
          cmake --build . --target slime_shooter game_resources
      - name: "Create tarball"
        run: |
          tar -czvf unoty-unix.tar.gz ./build/out
      - name: "Upload binaries"
        uses: actions/upload-artifact@v3
        with:
          name: unoty-unix
          path: unoty-unix.tar.gz
  build-windows:
    name: "Build (Windows)"
    runs-on: windows-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
      - name: "Install dependencies"
        run: |
          choco install -y ninja cmake mingw
          ninja --version
          cmake --version
      - name: "Configure CMake"
        run: |
          mkdir build
          cd build
          mkdir out
          cmake -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles" ..
      - name: "Build"
        run: |
          cd build
          cmake --build . --target engine 
          cmake --build . --target slime_shooter game_resources
      - name: "Create zip"
        run: |
          powershell Compress-Archive ./build/out unoty-windows.zip
      - name: "Upload binaries"
        uses: actions/upload-artifact@v3
        with:
          name: unoty-windows
          path: unoty-windows.zip
  create-release:
    name: "Create release"
    runs-on: ubuntu-latest
    needs: [ build-unix, build-windows ]
    steps:
      - name: "Download GNU/Linux binaries"
        uses: actions/download-artifact@v3
        with:
          name: unoty-unix
      - name: "Download Windows binaries"
        uses: actions/download-artifact@v3
        with:
          name: unoty-windows
      - name: "Form release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            unoty-unix.tar.gz
            unoty-windows.zip

